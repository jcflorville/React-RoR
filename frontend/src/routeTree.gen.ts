/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as SignUpRouteImport } from './routes/sign-up'
import { Route as SignInRouteImport } from './routes/sign-in'
import { Route as AboutRouteImport } from './routes/about'
import { Route as AuthRouteImport } from './routes/_auth'
import { Route as IndexRouteImport } from './routes/index'
import { Route as AuthProjectsRouteImport } from './routes/_auth.projects'
import { Route as AuthDashboardRouteImport } from './routes/_auth.dashboard'
import { Route as AuthProjectsIndexRouteImport } from './routes/_auth.projects.index'
import { Route as AuthProjectsIdEditRouteImport } from './routes/_auth.projects.$id.edit'

const SignUpRoute = SignUpRouteImport.update({
  id: '/sign-up',
  path: '/sign-up',
  getParentRoute: () => rootRouteImport,
} as any)
const SignInRoute = SignInRouteImport.update({
  id: '/sign-in',
  path: '/sign-in',
  getParentRoute: () => rootRouteImport,
} as any)
const AboutRoute = AboutRouteImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthRoute = AuthRouteImport.update({
  id: '/_auth',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthProjectsRoute = AuthProjectsRouteImport.update({
  id: '/projects',
  path: '/projects',
  getParentRoute: () => AuthRoute,
} as any)
const AuthDashboardRoute = AuthDashboardRouteImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => AuthRoute,
} as any)
const AuthProjectsIndexRoute = AuthProjectsIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AuthProjectsRoute,
} as any)
const AuthProjectsIdEditRoute = AuthProjectsIdEditRouteImport.update({
  id: '/$id/edit',
  path: '/$id/edit',
  getParentRoute: () => AuthProjectsRoute,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/sign-in': typeof SignInRoute
  '/sign-up': typeof SignUpRoute
  '/dashboard': typeof AuthDashboardRoute
  '/projects': typeof AuthProjectsRouteWithChildren
  '/projects/': typeof AuthProjectsIndexRoute
  '/projects/$id/edit': typeof AuthProjectsIdEditRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/sign-in': typeof SignInRoute
  '/sign-up': typeof SignUpRoute
  '/dashboard': typeof AuthDashboardRoute
  '/projects': typeof AuthProjectsIndexRoute
  '/projects/$id/edit': typeof AuthProjectsIdEditRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/_auth': typeof AuthRouteWithChildren
  '/about': typeof AboutRoute
  '/sign-in': typeof SignInRoute
  '/sign-up': typeof SignUpRoute
  '/_auth/dashboard': typeof AuthDashboardRoute
  '/_auth/projects': typeof AuthProjectsRouteWithChildren
  '/_auth/projects/': typeof AuthProjectsIndexRoute
  '/_auth/projects/$id/edit': typeof AuthProjectsIdEditRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/about'
    | '/sign-in'
    | '/sign-up'
    | '/dashboard'
    | '/projects'
    | '/projects/'
    | '/projects/$id/edit'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/about'
    | '/sign-in'
    | '/sign-up'
    | '/dashboard'
    | '/projects'
    | '/projects/$id/edit'
  id:
    | '__root__'
    | '/'
    | '/_auth'
    | '/about'
    | '/sign-in'
    | '/sign-up'
    | '/_auth/dashboard'
    | '/_auth/projects'
    | '/_auth/projects/'
    | '/_auth/projects/$id/edit'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthRoute: typeof AuthRouteWithChildren
  AboutRoute: typeof AboutRoute
  SignInRoute: typeof SignInRoute
  SignUpRoute: typeof SignUpRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/sign-up': {
      id: '/sign-up'
      path: '/sign-up'
      fullPath: '/sign-up'
      preLoaderRoute: typeof SignUpRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/sign-in': {
      id: '/sign-in'
      path: '/sign-in'
      fullPath: '/sign-in'
      preLoaderRoute: typeof SignInRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_auth': {
      id: '/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_auth/projects': {
      id: '/_auth/projects'
      path: '/projects'
      fullPath: '/projects'
      preLoaderRoute: typeof AuthProjectsRouteImport
      parentRoute: typeof AuthRoute
    }
    '/_auth/dashboard': {
      id: '/_auth/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof AuthDashboardRouteImport
      parentRoute: typeof AuthRoute
    }
    '/_auth/projects/': {
      id: '/_auth/projects/'
      path: '/'
      fullPath: '/projects/'
      preLoaderRoute: typeof AuthProjectsIndexRouteImport
      parentRoute: typeof AuthProjectsRoute
    }
    '/_auth/projects/$id/edit': {
      id: '/_auth/projects/$id/edit'
      path: '/$id/edit'
      fullPath: '/projects/$id/edit'
      preLoaderRoute: typeof AuthProjectsIdEditRouteImport
      parentRoute: typeof AuthProjectsRoute
    }
  }
}

interface AuthProjectsRouteChildren {
  AuthProjectsIndexRoute: typeof AuthProjectsIndexRoute
  AuthProjectsIdEditRoute: typeof AuthProjectsIdEditRoute
}

const AuthProjectsRouteChildren: AuthProjectsRouteChildren = {
  AuthProjectsIndexRoute: AuthProjectsIndexRoute,
  AuthProjectsIdEditRoute: AuthProjectsIdEditRoute,
}

const AuthProjectsRouteWithChildren = AuthProjectsRoute._addFileChildren(
  AuthProjectsRouteChildren,
)

interface AuthRouteChildren {
  AuthDashboardRoute: typeof AuthDashboardRoute
  AuthProjectsRoute: typeof AuthProjectsRouteWithChildren
}

const AuthRouteChildren: AuthRouteChildren = {
  AuthDashboardRoute: AuthDashboardRoute,
  AuthProjectsRoute: AuthProjectsRouteWithChildren,
}

const AuthRouteWithChildren = AuthRoute._addFileChildren(AuthRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthRoute: AuthRouteWithChildren,
  AboutRoute: AboutRoute,
  SignInRoute: SignInRoute,
  SignUpRoute: SignUpRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
